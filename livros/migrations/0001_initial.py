# Generated by Django 4.1.3 on 2022-12-31 12:30

import ckeditor.fields
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('editora', '0001_initial'),
        ('autor', '0001_initial'),
        ('genero', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ebook',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=450)),
                ('descricao', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('publicacao', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pendentes', 'pendentes'), ('cadastrado', 'cadastrado'), ('cancelado', 'cancelado')], default='pendentes', max_length=14)),
                ('capa', models.URLField(blank=True, null=True)),
                ('poster', models.URLField(blank=True, null=True)),
                ('edicao', models.IntegerField()),
                ('idioma', models.CharField(choices=[('português', 'Português'), ('inglês', 'Inglês'), ('espanhol', 'Espanhol'), ('italiano', 'Italiano'), ('francês', 'Francês'), ('alemão', 'Alemão'), ('catalão', 'Catalão')], default='inglês', max_length=150)),
                ('paginas', models.IntegerField()),
                ('isbn', models.CharField(max_length=90)),
                ('classificacao', models.CharField(blank=True, max_length=3)),
                ('average_rating', models.CharField(blank=True, max_length=5)),
                ('average_count', models.CharField(blank=True, max_length=100)),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('horas', models.CharField(default='00:00:00', max_length=150)),
                ('views', models.IntegerField(default=0, help_text='O total de visualizações')),
                ('preco', models.DecimalField(decimal_places=2, help_text='O preço do livro', max_digits=4)),
                ('autor', models.ManyToManyField(blank=True, to='autor.autor')),
                ('editora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editora_ebook', to='editora.editora')),
                ('genero', models.ManyToManyField(blank=True, to='genero.genero')),
                ('user', models.ManyToManyField(blank=True, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Livros_Analytics',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=450)),
                ('descricao', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('publish', models.DateTimeField(blank=True)),
                ('popularity', models.IntegerField(default=0)),
                ('poster', models.URLField(blank=True)),
                ('poster_url', models.URLField(blank=True)),
                ('genero', models.CharField(blank=True, max_length=400, null=True)),
                ('edicao', models.IntegerField()),
                ('autor', models.CharField(blank=True, max_length=400, null=True)),
                ('editora', models.CharField(blank=True, max_length=150)),
                ('linguagem', models.CharField(blank=True, max_length=150)),
                ('paginas', models.IntegerField()),
                ('isbn', models.CharField(max_length=90)),
                ('average_rating', models.CharField(blank=True, max_length=3)),
                ('average_count', models.CharField(blank=True, max_length=3)),
                ('votes_count', models.IntegerField(default=0)),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('total_horas', models.CharField(default='00:00:00', max_length=150)),
            ],
            options={
                'verbose_name': 'Analise de livro',
                'verbose_name_plural': 'Analise de livros',
                'ordering': ['-publish'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.CharField(max_length=110, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('topic', models.CharField(max_length=120)),
                ('number_of_questions', models.IntegerField()),
                ('time', models.IntegerField(help_text='duration of the quiz in minutes')),
                ('required_score_to_pass', models.IntegerField(help_text='required score in %')),
                ('difficulty', models.CharField(choices=[('fácil', 'fácil'), ('medium', 'medium'), ('dificil', 'dificil')], max_length=9)),
                ('status', models.CharField(choices=[('projeto', 'projeto'), ('elaboração', 'elaboração'), ('concluido', 'concluido')], default='projeto', help_text='O status do questionário', max_length=14)),
                ('media', models.IntegerField(default=0)),
                ('completed', models.BooleanField(default=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_livro', to='livros.ebook')),
            ],
            options={
                'verbose_name_plural': 'Quizes',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('rate', models.IntegerField()),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livros.ebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_livro_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livros.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_result', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('answered', models.BooleanField(default=False)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livros.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=150, unique=True)),
                ('img', models.URLField()),
                ('adicionado', models.DateTimeField(auto_now_add=True, null=True)),
                ('livro', models.ManyToManyField(to='livros.ebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_playlist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livros.ebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_livro_like', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Leitura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[(0, 'PROJETO'), (1, 'LENDO'), (2, 'PAUSADA'), (3, 'CONCLUíDA')], default=0, max_length=40)),
                ('inicio', models.DateTimeField(auto_now_add=True, null=True)),
                ('termino', models.DateTimeField(blank=True, null=True)),
                ('lendo', models.BooleanField(default=False, help_text='O leitor está lendo o livro ')),
                ('concluido', models.BooleanField(default=False, help_text='O leitor concluiu a leitura do livro ')),
                ('duracao', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('paginas', models.IntegerField(default=0)),
                ('paginas_restante', models.IntegerField(default=0)),
                ('resenha', models.TextField(blank=True, null=True)),
                ('complete_per', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livro', to='livros.ebook')),
                ('pre_requisito', models.ManyToManyField(related_name='pre_requisitos', to='livros.leitura')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_leitura', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'leitura',
            },
        ),
        migrations.CreateModel(
            name='Favoritos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adicionado', models.DateTimeField(auto_now_add=True, null=True)),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoritos', to='livros.ebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_favoritos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Capitulo',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0)),
                ('titulo', models.CharField(max_length=700)),
                ('texto', ckeditor.fields.RichTextField(help_text='O conteudo do texto do livro')),
                ('pagina', models.IntegerField(default=0)),
                ('leitura', models.BooleanField(default=False, help_text='O capitulo já foi lido')),
                ('duracao', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('ebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_ebook', to='livros.ebook')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('correct', models.BooleanField(default=False)),
                ('punctuation', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livros.question')),
            ],
        ),
    ]
